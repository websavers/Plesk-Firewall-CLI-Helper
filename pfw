#!/bin/bash

function show_help {
  echo "Use pfw -d 1.1.1.1 to block 1.1.1.1"
}

# A POSIX variable
OPTIND=1 # Reset in case getopts has been used previously in the shell.
# Initialize our own variables:
block_ip=""

while getopts "h?d:" opt; do
    case "$opt" in
    h|\?)
      show_help
      exit 0
      ;;
    d) block_ip=$OPTARG
       ;;
    esac
done

shift $((OPTIND-1))
[ "${1:-}" = "--" ] && shift

if [ -z "$block_ip" ]; then
    echo "You did not provide an IP address to block. Use -d IP to block an IP."
    exit 0
else
    # Ref: https://support.plesk.com/hc/en-us/articles/115002552134-How-to-manage-Plesk-firewall-via-CLI- 
    
    RULE_ID=$(plesk db -Ne 'select id from module_firewall_rules where configuration_id=2 and object like "%Custom Blocks%"');
    if [ -z "$RULE_ID" ]; then
      echo "Creating new rule for Custom Blocks..."
      /usr/local/psa/bin/modules/firewall/settings -s -name 'Custom Blocks' -direction input -action deny -remote-addresses $block_ip
    else
      SERIALIZED_RULE=$(plesk db -Ne 'select object from module_firewall_rules where configuration_id=2 and object like "%Custom Blocks%"')
      EXISTING_IPS=$(echo $SERIALIZED_RULE | php -R '$arr = unserialize($argn); echo implode(",",$arr["from"]);')
      echo "Adding $block_ip to $EXISTING_IPS in rule 'Custom Blocks'..."
      /usr/local/psa/bin/modules/firewall/settings -s -id $RULE_ID -remote-addresses "$block_ip,$EXISTING_IPS"
    fi
    
    /usr/local/psa/bin/modules/firewall/settings -a # apply
    /usr/local/psa/bin/modules/firewall/settings -c # confirm changes
fi